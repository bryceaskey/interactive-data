Ref5_genes <- filter(Ref5_upregulated, locus %in% genesA2Ref5Ref2)[, c(1,6:11)]
Ref2_genes <- filter(Ref2_upregulated, locus %in% genesA2Ref5Ref2)[, c(1,6:11)]
A2Ref5Ref2_upregulated <- merge(merge(Cyp79A2_genes, Ref5_genes, by="locus"), Ref2_genes, by="locus")
genesA2Ref5Ref2 <- setdiff(Reduce(intersect, list(Cyp79A2_downregulated$locus, Ref5_downregulated$locus, Ref2_downregulated$locus)), NAA_treated_downregulated$locus)
Cyp79A2_genes <- filter(Cyp79A2_downregulated, locus %in% genesA2Ref5Ref2)
Ref5_genes <- filter(Ref5_downregulated, locus %in% genesA2Ref5Ref2)[, c(1,6:11)]
Ref2_genes <- filter(Ref2_downregulated, locus %in% genesA2Ref5Ref2)[, c(1,6:11)]
A2Ref5Ref2_downregulated <- merge(merge(Cyp79A2_genes, Ref5_genes, by="locus"), Ref2_genes, by="locus")
DEGs_A2Ref5Ref2_4 <- list(upregulated=A2Ref5Ref2_upregulated, downregulated=A2Ref5Ref2_downregulated)
View(DEGs_A2Ref5Ref2_4)
genesA2Ref5 <- setdiff(intersect(Cyp79A2_upregulated$locus, Ref5_upregulated$locus), union(Ref2_upregulated$locus, NAA_treated_upregulated$locus))
source('~/Cyp79A2-RNAseq/R-scripts/DEG-intersections.R')
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
DEGs_A2Ref5 <- readRDS("C:/Users/Bryce/Documents/Cyp79A2-RNAseq/data/intersections/4-way-intersection/DEGs_A2Ref5_4.rds")
heatmapData <- draw_heatmap(DEGs_A2Ref5, 2)
heatmapData <- draw_heatmap(DEGs_A2Ref5, 2)
draw_heatmap <- function(DEG_data, num_samples){
if(num_samples==1){
dataCols <- 10
}else if(num_samples==2){
dataCols <- c(10,16)
}else if(num_samples==3){
dataCols <- c(10,16,22)
}
print(DEG_data)
DEG_data <- DEG_data[["upregulated"]]$mean_log2_fold_change <- rowMeans(DEG_data$upregulated[dataCols])
DEG_data <- DEG_data[["downregulated"]]mean_log2_fold_change <- rowMeans(DEG_data$downregulated[dataCols])
heatmapData <- DEG_data$upregulated[,c(1:4, dataCols, max(dataCols)+1)]
heatmapData <- rbind(heatmapData, DEG_data$downregulated[,c(1:4, dataCols, max(dataCols)+1)])
#heatmapData <- heatmapData[order(heatmapData$)]
#DEG_data$upregulated <- DEG_data$upregulated[order(DEG_data$upregulated$mean_log2_fold_change),]
return(heatmapData)
draw_heatmap <- function(DEG_data, num_samples){
if(num_samples==1){
dataCols <- 10
}else if(num_samples==2){
dataCols <- c(10,16)
}else if(num_samples==3){
dataCols <- c(10,16,22)
}
print(DEG_data)
DEG_data <- DEG_data[["upregulated"]]$mean_log2_fold_change <- rowMeans(DEG_data$upregulated[dataCols])
DEG_data <- DEG_data[["downregulated"]]mean_log2_fold_change <- rowMeans(DEG_data$downregulated[dataCols])
heatmapData <- DEG_data$upregulated[,c(1:4, dataCols, max(dataCols)+1)]
heatmapData <- rbind(heatmapData, DEG_data$downregulated[,c(1:4, dataCols, max(dataCols)+1)])
#heatmapData <- heatmapData[order(heatmapData$)]
#DEG_data$upregulated <- DEG_data$upregulated[order(DEG_data$upregulated$mean_log2_fold_change),]
return(heatmapData)
}
draw_heatmap <- function(DEG_data, num_samples){
if(num_samples==1){
dataCols <- 10
}else if(num_samples==2){
dataCols <- c(10,16)
}else if(num_samples==3){
dataCols <- c(10,16,22)
}
print(DEG_data)
DEG_data <- DEG_data[["upregulated"]]$mean_log2_fold_change <- rowMeans(DEG_data$upregulated[dataCols])
DEG_data <- DEG_data[["downregulated"]]mean_log2_fold_change <- rowMeans(DEG_data$downregulated[dataCols])
heatmapData <- DEG_data$upregulated[,c(1:4, dataCols, max(dataCols)+1)]
heatmapData <- rbind(heatmapData, DEG_data$downregulated[,c(1:4, dataCols, max(dataCols)+1)])
#heatmapData <- heatmapData[order(heatmapData$)]
#DEG_data$upregulated <- DEG_data$upregulated[order(DEG_data$upregulated$mean_log2_fold_change),]
return(heatmapData)
}
draw_heatmap <- function(DEG_data, num_samples){
if(num_samples==1){
dataCols <- 10
}else if(num_samples==2){
dataCols <- c(10,16)
}else if(num_samples==3){
dataCols <- c(10,16,22)
}
print(DEG_data)
DEG_data <- DEG_data[["upregulated"]]mean_log2_fold_change <- rowMeans(DEG_data$upregulated[dataCols])
DEG_data <- DEG_data[["downregulated"]]mean_log2_fold_change <- rowMeans(DEG_data$downregulated[dataCols])
heatmapData <- DEG_data$upregulated[,c(1:4, dataCols, max(dataCols)+1)]
heatmapData <- rbind(heatmapData, DEG_data$downregulated[,c(1:4, dataCols, max(dataCols)+1)])
#heatmapData <- heatmapData[order(heatmapData$)]
#DEG_data$upregulated <- DEG_data$upregulated[order(DEG_data$upregulated$mean_log2_fold_change),]
return(heatmapData)
}
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
DEGs_A2Ref5 <- readRDS("C:/Users/Bryce/Documents/Cyp79A2-RNAseq/data/intersections/4-way-intersection/DEGs_A2Ref5_4.rds")
heatmapData <- draw_heatmap(DEGs_A2Ref5, 2)
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
DEGs_A2Ref5 <- readRDS("C:/Users/Bryce/Documents/Cyp79A2-RNAseq/data/intersections/4-way-intersection/DEGs_A2Ref5_4.rds")
View(DEGs_A2Ref5)
heatmapData <- draw_heatmap(DEGs_A2Ref5, 2)
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
heatmapData <- draw_heatmap(DEGs_A2Ref5, 2)
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
heatmapData <- draw_heatmap(DEGs_A2Ref5, 2)
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
heatmapData <- draw_heatmap(DEGs_A2Ref5, 2)
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
heatmapData <- draw_heatmap(DEGs_A2Ref5, 2)
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
heatmapData <- draw_heatmap(DEGs_A2Ref5, 2)
View(heatmapData)
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
heatmapData <- draw_heatmap(DEGs_A2Ref5, 2)
View(heatmapData)
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
heatmapData <- draw_heatmap(DEGs_A2Ref5, 2)
View(heatmapData)
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
heatmapData <- draw_heatmap(DEGs_A2Ref5, 2)
View(heatmapData)
help(order)
View(heatmapData)
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
heatmapData <- draw_heatmap(DEGs_A2Ref5, 2)
View(heatmapData)
help(all_of)
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
heatmapData <- draw_heatmap(DEGs_A2Ref5, 2)
View(DEGs_A2Ref5)
View(DEGs_A2Ref5$upregulated)
View(heatmapData)
128/2
47+17
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
help(scale_fill_gradient)
help(rescale)
rescale(c(0,6))
library(scales)
rescale(c(0,6))
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
rescale(min(heatmapData$log2_FC),0,max(heatmapData$log2_FC))
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
View(DEGs_A2Ref5)
DEG_data_upregulated <- DEGs_A2Ref5[["upregulated"]]
View(DEG_data_upregulated)
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
source('~/Cyp79A2-RNAseq/R-scripts/DEG-heatmaps.R')
View(DEGs_A2Ref5Ref2)
View(DEGs_A2Ref5Ref2$downregulated)
shiny::runApp('interactive-data/RNAseq')
PRJNA230565_data <- readRDS("data/PRJNA230565.rds")
setwd("C:/Users/Bryce/Documents/interactive-data/RNAseq/")
PRJNA230565_data <- readRDS("data/PRJNA230565.rds")
View(PRJNA230565_data)
source('~/interactive-data/RNAseq/loadData_PRJNA230565.R')
source('~/interactive-data/RNAseq/loadData_PRJNA230565.R')
View(tmmAllGenes)
View(fpkmAllGenes)
sqrt(2)
View(fpkmAllGenes)
source('~/interactive-data/RNAseq/loadData_PRJNA230565.R')
source('~/interactive-data/RNAseq/loadData_PRJNA230565.R', echo=TRUE)
sd(c(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:3]))/sqrt(2)
sd(c(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:3]))
c(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:3])
c(fpkmAllGenes[[fpkmAllGenes$locus==geneLocus, 2:3]])
unname(c(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:3]))
c(unname(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:3]))
sd(c(unname(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:3])))
test <- c(unname(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:3]))
test <- c(unlist(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:3]))
sd(c(unlist(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:3])))
sd(c(21.43039, 23.89147))
source('~/interactive-data/RNAseq/loadData_PRJNA230565.R')
View(NAA_DEGs)
View(araport11)
source('~/interactive-data/RNAseq/loadData_PRJNA230565.R')
View(NAA_DEGs)
help(formatC)
source('~/interactive-data/RNAseq/loadData_PRJNA230565.R')
View(NAA_DEGs)
NAA_DEGs <- NAA_DEGs[c(1:5,11:18,6,9)]
colnames(NAA_DEGs) <- c("locus", "short_name", "name", "aliases", "length",
"fpkm_control", "fpkmSE_control", "tmm_control", "tmmSE_control",
"fpkm_NAA", "fpkmSE_NAA", "tmm_NAA", "tmmSE_NAA", "log2FC_NAA", "pValue_NAA")
help(formatC)
# Limit decimal places written
for(col in 6:ncol(NAA_DEGs)){
for(row in 1:nrow(NAA_DEGs)){
NAA_DEGs[row,col] <- formatC(NAA_DEGs[row,col], digits=4)
}
}
View(NAA_DEGs)
for(col in 6:ncol(NAA_DEGs)){
for(row in 1:nrow(NAA_DEGs)){
print(NAA_DEGs[row,col])
NAA_DEGs[row,col] <- formatC(NAA_DEGs[row,col], digits=4)
print(NAA_DEGs[row,col])
}
}
help(signif)
# Limit decimal places written
for(col in 6:ncol(NAA_DEGs)){
for(row in 1:nrow(NAA_DEGs)){
print(NAA_DEGs[row,col])
NAA_DEGs[row,col] <- signif(NAA_DEGs[row,col], digits=4)
print(NAA_DEGs[row,col])
}
}
source('~/interactive-data/RNAseq/loadData_PRJNA230565.R')
for(col in 6:ncol(NAA_DEGs)){
for(row in 1:nrow(NAA_DEGs)){
print(NAA_DEGs[row,col])
NAA_DEGs[row,col] <- as.numeric(NAA_DEGs[row,col])
NAA_DEGs[row,col] <- signif(NAA_DEGs[row,col], digits=4)
print(NAA_DEGs[row,col])
}
}
for(col in 6:ncol(NAA_DEGs)){
for(row in 1:nrow(NAA_DEGs)){
print(NAA_DEGs[row,col])
NAA_DEGs[row,col] <- signif(as.numeric(NAA_DEGs[row,col], digits=5))
print(NAA_DEGs[row,col])
}
}
View(NAA_DEGs)
for(col in 6:ncol(NAA_DEGs)){
for(row in 1:nrow(NAA_DEGs)){
NAA_DEGs[row,col] <- signif(as.numeric(NAA_DEGs[row,col], digits=4))
}
NAA_DEGs[,col] <- as.numeric(NAA_DEGs[,col])
}
View(NAA_DEGs)
for(col in 6:ncol(NAA_DEGs)){
for(row in 1:nrow(NAA_DEGs)){
NAA_DEGs[row,col] <- formatC(as.numeric(NAA_DEGs[row,col], digits=4))
}
NAA_DEGs[,col] <- as.numeric(NAA_DEGs[,col])
}
View(NAA_DEGs)
source('~/interactive-data/RNAseq/loadData_PRJNA230565.R')
View(NAA_DEGs)
for(col in 6:ncol(NAA_DEGs)){
for(row in 1:nrow(NAA_DEGs)){
NAA_DEGs[row,col] <- formatC(as.numeric(NAA_DEGs[row,col], digits=4), format="g", drop0trailing=TRUE)
}
NAA_DEGs[,col] <- as.numeric(NAA_DEGs[,col])
}
View(NAA_DEGs)
source('~/interactive-data/RNAseq/loadData_PRJNA230565.R')
source('~/interactive-data/RNAseq/loadData_PRJNA230565.R')
View(NAA_DEGs)
a <- 2.9979
print (Signif (a,3) )
a <- 2.9979
print (signif (a,3) )
a <- 2203.9979
print (signif (a,3) )
install.packages("VFP")
library(VFP)
a <- 2.9979
print (Signif (a,3) )
help("Signif")
Signif(1.143543, digits=4)
library(VFP)
Signif(1.143543, digits=4)
source('~/interactive-data/RNAseq/loadData_PRJNA230565.R', echo=TRUE)
View(NAA_DEGs)
for(col in 6:ncol(NAA_DEGs)){
#  for(row in 1:nrow(NAA_DEGs)){
NAA_DEGs[,col] <- formatC(signif(NAA_DEGs[,col], digits=4), digits=4, format="fg", drop0trailing=TRUE)
#  }
NAA_DEGs[,col] <- as.numeric(NAA_DEGs[,col])
}
View(NAA_DEGs)
for(col in 6:ncol(NAA_DEGs)){
#  for(row in 1:nrow(NAA_DEGs)){
NAA_DEGs[,col] <- signif(NAA_DEGs[,col], digits=4)
#  }
NAA_DEGs[,col] <- as.numeric(NAA_DEGs[,col])
}
View(NAA_DEGs)
signif(540031000, digits=2)
for(col in 6:ncol(NAA_DEGs)){
#  for(row in 1:nrow(NAA_DEGs)){
NAA_DEGs[,col] <- signif(NAA_DEGs[,col], digits=4)
#  }
#NAA_DEGs[,col] <- as.numeric(NAA_DEGs[,col])
}
View(NAA_DEGs)
for(col in 6:ncol(NAA_DEGs)){
#  for(row in 1:nrow(NAA_DEGs)){
NAA_DEGs[,col] <- formatC(NAA_DEGs[,col], width=5, format="G")
#  }
#NAA_DEGs[,col] <- as.numeric(NAA_DEGs[,col])
}
View(NAA_DEGs)
#  }
#NAA_DEGs[,col] <- as.numeric(NAA_DEGs[,col])
}
source('~/interactive-data/RNAseq/loadData_PRJNA230565.R', echo=TRUE)
View(NAA_DEGs)
# Differential gene expression analysis using edgeR package
# Goal - perform pairwise comparisons of expression data
# Install and load packages
#if (!requireNamespace("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("edgeR")
library(edgeR)
library(tibble)
# Specify paths to data files
justCounts <- "C:/Users/Bryce/Documents/Cyp79A2-RNAseq/data/PRJNA388948/expression_counts/"
geneLengths <- "C:/Users/Bryce/Documents/Cyp79A2-RNAseq/data/PRJNA388948/gene_lengths.txt"
araport11 <- read.csv("C:/Users/Bryce/Documents/Cyp79A2-RNAseq/data/Araport11.csv")
# Load gene expression and gene length data
countFiles <- paste(justCounts, dir(justCounts), sep="")
countLabels <- c("WT_rep1", "WT_rep2", "WT_rep3", "ref5_rep1", "ref5_rep2", "ref5_rep3", "ref2_rep1", "ref2_rep2", "ref2_rep3")
expressionData <- readDGE(countFiles,
labels=countLabels,
group=c("A", "A", "A", "B", "B", "B", "C", "C", "C"))
expressionData$genes <- read.delim(geneLengths, row.names=1)
# Only keep genes with significant level of expression
keep <- filterByExpr(expressionData)
expressionData <- expressionData[keep, , keep.lib.sizes=FALSE]
# Normalize for library size
expressionData <- calcNormFactors(expressionData, method="TMM")
# Create MDS plot to verify integrity of RNAseq data
plotMDS(expressionData, method="bcv")
# Perform DEG analysis to compare gene expression of ref5 and ref2 to WT
expDesign <- model.matrix(~0+group, data=expressionData$samples)
expressionData <- estimateDisp(expressionData, design=expDesign)
colnames(expDesign) <- levels(expressionData$samples$group)
modelFit <- glmQLFit(expressionData, expDesign)
contrast_ref5_vs_WT <- makeContrasts(B-A, levels=expDesign)
ref5_vs_WT <- glmQLFTest(modelFit, contrast=contrast_ref5_vs_WT)
ref5_DEGs <- topTags(ref5_vs_WT, n=nrow(expressionData), p.value=1)$table
ref5_DEGs <- rownames_to_column(ref5_DEGs, var="locus")
contrast_ref2_vs_WT <- makeContrasts(C-A, levels=expDesign)
ref2_vs_WT <- glmQLFTest(modelFit, contrast=contrast_ref2_vs_WT)
ref2_DEGs <- topTags(ref2_vs_WT, n=nrow(expressionData), p.value=1)$table
ref2_DEGs <- rownames_to_column(ref2_DEGs, var="locus")
# Load gene annotations
araport11 <- araport11[, c(1, 3, 4, 13)]
colnames(araport11) <- c("locus", "short_name", "name", "aliases")
# Add gene annotations to DEG dataframes
ref5_DEGs <- merge(araport11, ref5_DEGs, by="locus", all.y=TRUE)
ref2_DEGs <- merge(araport11, ref2_DEGs, by="locus", all.y=TRUE)
# Calculate fpkm for all genes
fpkmAllGenes <- as.data.frame(rpkm(expressionData$counts, gene.length=expressionData$genes$Length, normalized.lib.sizes=TRUE, log=FALSE))
fpkmAllGenes <- rownames_to_column(fpkmAllGenes, var="locus")
# Calculate tmm for all genes
tmmAllGenes <- as.data.frame(cpm(expressionData, log=FALSE))
tmmAllGenes <- rownames_to_column(tmmAllGenes, var="locus")
# Differential gene expression analysis using edgeR package
# Goal - perform pairwise comparisons of expression data
# Install and load packages
#if (!requireNamespace("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("edgeR")
library(edgeR)
library(tibble)
# Specify paths to data files
justCounts <- "C:/Users/bca08_000/Documents/Cyp79A2-RNAseq/data/PRJNA388948/expression_counts/"
geneLengths <- "C:/Users/bca08_000/Documents/Cyp79A2-RNAseq/data/PRJNA388948/gene_lengths.txt"
araport11 <- read.csv("C:/Users/bca08_000/Documents/Cyp79A2-RNAseq/data/Araport11.csv")
# Load gene expression and gene length data
countFiles <- paste(justCounts, dir(justCounts), sep="")
countLabels <- c("WT_rep1", "WT_rep2", "WT_rep3", "ref5_rep1", "ref5_rep2", "ref5_rep3", "ref2_rep1", "ref2_rep2", "ref2_rep3")
expressionData <- readDGE(countFiles,
labels=countLabels,
group=c("A", "A", "A", "B", "B", "B", "C", "C", "C"))
expressionData$genes <- read.delim(geneLengths, row.names=1)
# Only keep genes with significant level of expression
keep <- filterByExpr(expressionData)
expressionData <- expressionData[keep, , keep.lib.sizes=FALSE]
# Normalize for library size
expressionData <- calcNormFactors(expressionData, method="TMM")
# Create MDS plot to verify integrity of RNAseq data
plotMDS(expressionData, method="bcv")
# Perform DEG analysis to compare gene expression of ref5 and ref2 to WT
expDesign <- model.matrix(~0+group, data=expressionData$samples)
expressionData <- estimateDisp(expressionData, design=expDesign)
colnames(expDesign) <- levels(expressionData$samples$group)
modelFit <- glmQLFit(expressionData, expDesign)
contrast_ref5_vs_WT <- makeContrasts(B-A, levels=expDesign)
ref5_vs_WT <- glmQLFTest(modelFit, contrast=contrast_ref5_vs_WT)
ref5_DEGs <- topTags(ref5_vs_WT, n=nrow(expressionData), p.value=1)$table
ref5_DEGs <- rownames_to_column(ref5_DEGs, var="locus")
contrast_ref2_vs_WT <- makeContrasts(C-A, levels=expDesign)
ref2_vs_WT <- glmQLFTest(modelFit, contrast=contrast_ref2_vs_WT)
ref2_DEGs <- topTags(ref2_vs_WT, n=nrow(expressionData), p.value=1)$table
ref2_DEGs <- rownames_to_column(ref2_DEGs, var="locus")
# Load gene annotations
araport11 <- araport11[, c(1, 3, 4, 13)]
colnames(araport11) <- c("locus", "short_name", "name", "aliases")
# Add gene annotations to DEG dataframes
ref5_DEGs <- merge(araport11, ref5_DEGs, by="locus", all.y=TRUE)
ref2_DEGs <- merge(araport11, ref2_DEGs, by="locus", all.y=TRUE)
# Calculate fpkm for all genes
fpkmAllGenes <- as.data.frame(rpkm(expressionData$counts, gene.length=expressionData$genes$Length, normalized.lib.sizes=TRUE, log=FALSE))
fpkmAllGenes <- rownames_to_column(fpkmAllGenes, var="locus")
# Calculate tmm for all genes
tmmAllGenes <- as.data.frame(cpm(expressionData, log=FALSE))
tmmAllGenes <- rownames_to_column(tmmAllGenes, var="locus")
View(tmmAllGenes)
View(tmmAllGenes)
View(fpkmAllGenes)
# Add tmm and fpkm to ref5 DEG dataframe
fpkm_WT <- vector(mode="numeric", length=nrow(ref5_DEGs))
fpkmSE_WT <- vector(mode="numeric", length=nrow(ref5_DEGs))
tmm_WT <- vector(mode="numeric", length=nrow(ref5_DEGs))
tmmSE_WT <- vector(mode="numeric", length=nrow(ref5_DEGs))
fpkm_ref5 <- vector(mode="numeric", length=nrow(ref5_DEGs))
fpkmSE_ref5 <- vector(mode="numeric", length=nrow(ref5_DEGs))
tmm_ref5 <- vector(mode="numeric", length=nrow(ref5_DEGs))
tmmSE_ref5 <- vector(mode="numeric", length=nrow(ref5_DEGs))
for(i in 1:nrow(ref5_DEGs)){
geneLocus <- ref5_DEGs$locus[i]
fpkm_WT[i] <- unname(rowMeans(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:4]))
fpkmSE_WT[i] <- sd(c(unlist(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:4])))/sqrt(3)
tmm_WT[i] <- unname(rowMeans(tmmAllGenes[tmmAllGenes$locus==geneLocus, 2:4]))
tmmSE_WT[i] <- sd(c(unlist(tmmAllGenes[tmmAllGenes$locus==geneLocus, 2:4])))/sqrt(3)
fpkm_ref5[i] <- unname(rowMeans(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 5:7]))
fpkmSE_ref5[i] <- sd(c(unlist(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 5:7])))/sqrt(3)
tmm_ref5[i] <- unname(rowMeans(tmmAllGenes[tmmAllGenes$locus==geneLocus, 5:7]))
tmmSE_ref5[i] <- sd(c(unlist(tmmAllGenes[tmmAllGenes$locus==geneLocus, 5:7])))/sqrt(3)
}
ref5_DEGs$fpkm_WT <- fpkm_WT
ref5_DEGs$fpkmSE_WT <- fpkmSE_WT
ref5_DEGs$tmm_WT <- tmm_WT
ref5_DEGs$tmmSE_WT <- tmmSE_WT
ref5_DEGs$fpkm_ref5 <- fpkm_ref5
ref5_DEGs$fpkmSE_ref5 <- fpkmSE_ref5
ref5_DEGs$tmm_ref5 <- tmm_ref5
ref5_DEGs$tmmSE_ref5 <- tmmSE_ref5
ref5_DEGs <- ref5_DEGs[c(1:5,11:18,6,9)]
colnames(ref5_DEGs) <- c("locus", "short_name", "name", "aliases", "length",
"fpkm_WT", "fpkmSE_WT", "tmm_WT", "tmmSE_WT",
"fpkm_ref5", "fpkmSE_ref5", "tmm_ref5", "tmmSE_ref5", "log2FC_ref5", "pValue_ref5")
View(ref5_DEGs)
View(fpkmAllGenes)
View(ref2_DEGs)
fpkm_WT <- vector(mode="numeric", length=nrow(ref2_DEGs))
fpkmSE_WT <- vector(mode="numeric", length=nrow(ref2_DEGs))
tmm_WT <- vector(mode="numeric", length=nrow(ref2_DEGs))
tmmSE_WT <- vector(mode="numeric", length=nrow(ref2_DEGs))
fpkm_ref2 <- vector(mode="numeric", length=nrow(ref2_DEGs))
fpkmSE_ref2 <- vector(mode="numeric", length=nrow(ref2_DEGs))
tmm_ref2 <- vector(mode="numeric", length=nrow(ref2_DEGs))
tmmSE_ref2 <- vector(mode="numeric", length=nrow(ref2_DEGs))
for(i in 1:nrow(ref2_DEGs)){
geneLocus <- ref2_DEGs$locus[i]
fpkm_WT[i] <- unname(rowMeans(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:4]))
fpkmSE_WT[i] <- sd(c(unlist(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:4])))/sqrt(3)
tmm_WT[i] <- unname(rowMeans(tmmAllGenes[tmmAllGenes$locus==geneLocus, 2:4]))
tmmSE_WT[i] <- sd(c(unlist(tmmAllGenes[tmmAllGenes$locus==geneLocus, 2:4])))/sqrt(3)
fpkm_ref2[i] <- unname(rowMeans(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 5:7]))
fpkmSE_ref2[i] <- sd(c(unlist(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 5:7])))/sqrt(3)
tmm_ref2[i] <- unname(rowMeans(tmmAllGenes[tmmAllGenes$locus==geneLocus, 5:7]))
tmmSE_ref2[i] <- sd(c(unlist(tmmAllGenes[tmmAllGenes$locus==geneLocus, 5:7])))/sqrt(3)
}
ref2_DEGs$fpkm_WT <- fpkm_WT
ref2_DEGs$fpkmSE_WT <- fpkmSE_WT
ref2_DEGs$tmm_WT <- tmm_WT
ref2_DEGs$tmmSE_WT <- tmmSE_WT
ref2_DEGs$fpkm_ref2 <- fpkm_ref2
ref2_DEGs$fpkmSE_ref2 <- fpkmSE_ref2
ref2_DEGs$tmm_ref2 <- tmm_ref2
ref2_DEGs$tmmSE_ref2 <- tmmSE_ref2
View(tmmAllGenes)
View(ref2_DEGs)
fpkm_WT <- vector(mode="numeric", length=nrow(ref2_DEGs))
fpkmSE_WT <- vector(mode="numeric", length=nrow(ref2_DEGs))
tmm_WT <- vector(mode="numeric", length=nrow(ref2_DEGs))
tmmSE_WT <- vector(mode="numeric", length=nrow(ref2_DEGs))
fpkm_ref2 <- vector(mode="numeric", length=nrow(ref2_DEGs))
fpkmSE_ref2 <- vector(mode="numeric", length=nrow(ref2_DEGs))
tmm_ref2 <- vector(mode="numeric", length=nrow(ref2_DEGs))
tmmSE_ref2 <- vector(mode="numeric", length=nrow(ref2_DEGs))
for(i in 1:nrow(ref2_DEGs)){
geneLocus <- ref2_DEGs$locus[i]
fpkm_WT[i] <- unname(rowMeans(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:4]))
fpkmSE_WT[i] <- sd(c(unlist(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 2:4])))/sqrt(3)
tmm_WT[i] <- unname(rowMeans(tmmAllGenes[tmmAllGenes$locus==geneLocus, 2:4]))
tmmSE_WT[i] <- sd(c(unlist(tmmAllGenes[tmmAllGenes$locus==geneLocus, 2:4])))/sqrt(3)
fpkm_ref2[i] <- unname(rowMeans(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 8:10]))
fpkmSE_ref2[i] <- sd(c(unlist(fpkmAllGenes[fpkmAllGenes$locus==geneLocus, 8:10])))/sqrt(3)
tmm_ref2[i] <- unname(rowMeans(tmmAllGenes[tmmAllGenes$locus==geneLocus, 8:10]))
tmmSE_ref2[i] <- sd(c(unlist(tmmAllGenes[tmmAllGenes$locus==geneLocus, 8:10])))/sqrt(3)
}
ref2_DEGs$fpkm_WT <- fpkm_WT
ref2_DEGs$fpkmSE_WT <- fpkmSE_WT
ref2_DEGs$tmm_WT <- tmm_WT
ref2_DEGs$tmmSE_WT <- tmmSE_WT
ref2_DEGs$fpkm_ref2 <- fpkm_ref2
ref2_DEGs$fpkmSE_ref2 <- fpkmSE_ref2
ref2_DEGs$tmm_ref2 <- tmm_ref2
ref2_DEGs$tmmSE_ref2 <- tmmSE_ref2
ref2_DEGs <- ref2_DEGs[c(1,15:18,6,9)]
colnames(ref2_DEGs) <- c("locus", "short_name", "name", "aliases", "length",
"fpkm_ref2", "fpkmSE_ref2", "tmm_ref2", "tmmSE_ref2", "log2FC_ref2", "pValue_ref2")
View(ref2_DEGs)
colnames(ref2_DEGs) <- c("locus",
"fpkm_ref2", "fpkmSE_ref2", "tmm_ref2", "tmmSE_ref2", "log2FC_ref2", "pValue_ref2")
DEGs_PRJNA388948 <- merge(ref5_DEGs, ref2_DEGs, by="locus")
View(DEGs_PRJNA388948)
View(DEGs_PRJNA388948)
source('~/interactive-data/RNAseq/loadData_PRJNA388948.R')
View(DEGs_PRJNA388948)
DEGs_PRJNA388948 <- merge(ref5_DEGs, ref2_DEGs, by="locus")
for(col in 6:ncol(DEGs_PRJNA388948)){
DEGs_PRJNA388948[,col] <- as.numeric(formatC(DEGs_PRJNA388948[,col], width=5, format="G"))
}
View(DEGs_PRJNA388948)
source('~/interactive-data/RNAseq/loadData_PRJNA388948.R')
View(DEGs_PRJNA388948)
source('~/interactive-data/RNAseq/loadData_PRJNA230565.R')
